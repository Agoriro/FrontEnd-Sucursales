{"ast":null,"code":"import { environment } from 'src/environments/enviroment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BranchService {\n  constructor(http) {\n    this.http = http;\n    this.endPoint = environment.endPoint;\n    this.apiUrl = this.endPoint + \"branches/\";\n  }\n  getList() {\n    return this.http.get(`${this.apiUrl}list`);\n  }\n  add(model) {\n    return this.http.post(`${this.apiUrl}add`, model);\n  }\n  update(idBranch, model) {\n    return this.http.put(`${this.apiUrl}Update/${idBranch}`, model);\n  }\n  delete(idBranch) {\n    return this.http.delete(`${this.apiUrl}delete/${idBranch}`);\n  }\n  static #_ = this.ɵfac = function BranchService_Factory(t) {\n    return new (t || BranchService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BranchService,\n    factory: BranchService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","BranchService","constructor","http","endPoint","apiUrl","getList","get","add","model","post","update","idBranch","put","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Proyectos_WEB\\Prueba_Quala_Front\\FrontTest\\src\\app\\Services\\branch.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport{HttpClient} from '@angular/common/http';\r\nimport{environment} from 'src/environments/enviroment';\r\nimport {Observable} from 'rxjs';\r\nimport { Branch } from '../Interfaces/branch';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BranchService {\r\n  private endPoint:string = environment.endPoint;\r\n  private apiUrl:string = this.endPoint +\"branches/\";\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getList():Observable<Branch[]>{\r\n    return this.http.get<Branch[]>(`${this.apiUrl}list`);\r\n  }\r\n\r\n  add(model:Branch):Observable<Branch>{\r\n    return this.http.post<Branch>(`${this.apiUrl}add`,model);\r\n  }\r\n\r\n  update(idBranch:number,model:Branch):Observable<Branch>{\r\n    return this.http.put<Branch>(`${this.apiUrl}Update/${idBranch}`,model);\r\n  }\r\n  delete(idBranch:number):Observable<void>{\r\n    return this.http.delete<void>(`${this.apiUrl}delete/${idBranch}`);\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAOA,WAAW,QAAO,6BAA6B;;;AAOtD,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,QAAQ,GAAUJ,WAAW,CAACI,QAAQ;IACtC,KAAAC,MAAM,GAAU,IAAI,CAACD,QAAQ,GAAE,WAAW;EAEX;EAEvCE,OAAOA,CAAA;IACL,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACF,MAAM,MAAM,CAAC;EACtD;EAEAG,GAAGA,CAACC,KAAY;IACd,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAS,GAAG,IAAI,CAACL,MAAM,KAAK,EAACI,KAAK,CAAC;EAC1D;EAEAE,MAAMA,CAACC,QAAe,EAACH,KAAY;IACjC,OAAO,IAAI,CAACN,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACR,MAAM,UAAUO,QAAQ,EAAE,EAACH,KAAK,CAAC;EACxE;EACAK,MAAMA,CAACF,QAAe;IACpB,OAAO,IAAI,CAACT,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACT,MAAM,UAAUO,QAAQ,EAAE,CAAC;EACnE;EAAC,QAAAG,CAAA,G;qBAnBUd,aAAa,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbnB,aAAa;IAAAoB,OAAA,EAAbpB,aAAa,CAAAqB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"src/app/Services/branch.service\";\nimport * as i5 from \"src/app/Services/currency.service\";\nimport * as i6 from \"@angular/material/button\";\nexport const MY_DATE_FORMATS = {\n  parse: {\n    dateInput: 'DD/MM/YYYY'\n  },\n  display: {\n    dateInput: 'DD/MM/YYYY',\n    monthYearLabel: 'MMMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY'\n  }\n};\nexport class DialogAddEditComponent {\n  constructor(dialogReference, fb, _snackBar, _branchService, _currencyService) {\n    this.dialogReference = dialogReference;\n    this.fb = fb;\n    this._snackBar = _snackBar;\n    this._branchService = _branchService;\n    this._currencyService = _currencyService;\n    this.title = \"Nuevo\";\n    this.actionButton = \"Guardar\";\n    this.lstCurrency = [];\n    this.formBranch = this.fb.group({\n      branchCode: [\"\", Validators.required],\n      branchDescription: [\"\", Validators.required],\n      branchAddress: [\"\", Validators.required],\n      branchId: [\"\", Validators.required],\n      branchDateCreation: [\"\", Validators.required],\n      idCurrency: [\"\", Validators.required]\n    });\n    this._currencyService.getList().subscribe({\n      next: data => {\n        this.lstCurrency = data;\n      },\n      error: e => {}\n    });\n  }\n  showAlert(message, action) {\n    this._snackBar.open(message, action, {\n      horizontalPosition: \"end\",\n      verticalPosition: \"top\",\n      duration: 3000\n    });\n  }\n  ngOnInit() {}\n  static #_ = this.ɵfac = function DialogAddEditComponent_Factory(t) {\n    return new (t || DialogAddEditComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.BranchService), i0.ɵɵdirectiveInject(i5.CurrencyService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DialogAddEditComponent,\n    selectors: [[\"app-dialog-add-edit\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_DATE_FORMATS,\n      useValue: MY_DATE_FORMATS\n    }])],\n    decls: 7,\n    vars: 0,\n    consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\"]],\n    template: function DialogAddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Dialog with elements\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtext(3, \"This dialog showcases the title, close, content and actions elements.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"button\", 3);\n        i0.ɵɵtext(6, \"Close\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i6.MatButton, i1.MatDialogClose, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","MAT_DATE_FORMATS","MY_DATE_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","DialogAddEditComponent","constructor","dialogReference","fb","_snackBar","_branchService","_currencyService","title","actionButton","lstCurrency","formBranch","group","branchCode","required","branchDescription","branchAddress","branchId","branchDateCreation","idCurrency","getList","subscribe","next","data","error","e","showAlert","message","action","open","horizontalPosition","verticalPosition","duration","ngOnInit","_","i0","ɵɵdirectiveInject","i1","MatDialogRef","i2","FormBuilder","i3","MatSnackBar","i4","BranchService","i5","CurrencyService","_2","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","DialogAddEditComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\Proyectos_WEB\\Prueba_Quala_Front\\FrontTest\\src\\app\\Modals\\dialog-add-edit\\dialog-add-edit.component.ts","D:\\Proyectos_WEB\\Prueba_Quala_Front\\FrontTest\\src\\app\\Modals\\dialog-add-edit\\dialog-add-edit.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport{FormBuilder,FormGroup,Validators} from \"@angular/forms\";\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport{MAT_DATE_FORMATS} from '@angular/material/core';\nimport * as moment from 'moment';\n\nimport { Branch } from 'src/app/Interfaces/branch';\nimport { BranchService } from 'src/app/Services/branch.service';\nimport { Currency } from 'src/app/Interfaces/currency';\nimport { CurrencyService } from 'src/app/Services/currency.service';\n\nexport const MY_DATE_FORMATS={\n  parse:{\n    dateInput: 'DD/MM/YYYY',\n  },\n  display:{\n    dateInput:'DD/MM/YYYY',\n    monthYearLabel:'MMMM YYYY',\n    dateA11yLabel:'LL',\n    monthYearA11yLabel:'MMMM YYYY'\n\n  }\n}\n\n@Component({\n  selector: 'app-dialog-add-edit',\n  templateUrl: './dialog-add-edit.component.html',\n  styleUrls: ['./dialog-add-edit.component.css'],\n  providers:[\n    {\n      provide:MAT_DATE_FORMATS,useValue:MY_DATE_FORMATS\n    }\n  ]\n})\nexport class DialogAddEditComponent implements OnInit {\n  formBranch:FormGroup;\n  title:string = \"Nuevo\";\n  actionButton:string =\"Guardar\";\n  lstCurrency:Currency[]=[];\n\n  constructor(\n    private dialogReference:MatDialogRef<DialogAddEditComponent>,\n    private fb: FormBuilder,\n    private _snackBar: MatSnackBar,\n    private _branchService:BranchService,\n    private _currencyService:CurrencyService\n  ){\n    this.formBranch = this.fb.group({\n      branchCode:[\"\",Validators.required], \n      branchDescription:[\"\",Validators.required], \n      branchAddress:[\"\",Validators.required], \n      branchId:[\"\",Validators.required], \n      branchDateCreation:[\"\",Validators.required],\n      idCurrency:[\"\",Validators.required]\n    })\n    this._currencyService.getList().subscribe({\n      next:(data)=>{\n        this.lstCurrency=data;\n      },error:(e)=>{}\n  })\n\n\n  }\n\n  showAlert(message: string, action: string) {\n    this._snackBar.open(message, action,{\n      horizontalPosition:\"end\",\n      verticalPosition:\"top\",\n      duration:3000\n    });\n  }\n\n  ngOnInit():void{}\n}\n","<h1 mat-dialog-title>Dialog with elements</h1>\n<div mat-dialog-content>This dialog showcases the title, close, content and actions elements.</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Close</button>\n</div>\n"],"mappings":"AACA,SAA6BA,UAAU,QAAO,gBAAgB;AAG9D,SAAOC,gBAAgB,QAAO,wBAAwB;;;;;;;;AAQtD,OAAO,MAAMC,eAAe,GAAC;EAC3BC,KAAK,EAAC;IACJC,SAAS,EAAE;GACZ;EACDC,OAAO,EAAC;IACND,SAAS,EAAC,YAAY;IACtBE,cAAc,EAAC,WAAW;IAC1BC,aAAa,EAAC,IAAI;IAClBC,kBAAkB,EAAC;;CAGtB;AAYD,OAAM,MAAOC,sBAAsB;EAMjCC,YACUC,eAAoD,EACpDC,EAAe,EACfC,SAAsB,EACtBC,cAA4B,EAC5BC,gBAAgC;IAJhC,KAAAJ,eAAe,GAAfA,eAAe;IACf,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAT1B,KAAAC,KAAK,GAAU,OAAO;IACtB,KAAAC,YAAY,GAAS,SAAS;IAC9B,KAAAC,WAAW,GAAY,EAAE;IASvB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACP,EAAE,CAACQ,KAAK,CAAC;MAC9BC,UAAU,EAAC,CAAC,EAAE,EAACrB,UAAU,CAACsB,QAAQ,CAAC;MACnCC,iBAAiB,EAAC,CAAC,EAAE,EAACvB,UAAU,CAACsB,QAAQ,CAAC;MAC1CE,aAAa,EAAC,CAAC,EAAE,EAACxB,UAAU,CAACsB,QAAQ,CAAC;MACtCG,QAAQ,EAAC,CAAC,EAAE,EAACzB,UAAU,CAACsB,QAAQ,CAAC;MACjCI,kBAAkB,EAAC,CAAC,EAAE,EAAC1B,UAAU,CAACsB,QAAQ,CAAC;MAC3CK,UAAU,EAAC,CAAC,EAAE,EAAC3B,UAAU,CAACsB,QAAQ;KACnC,CAAC;IACF,IAAI,CAACP,gBAAgB,CAACa,OAAO,EAAE,CAACC,SAAS,CAAC;MACxCC,IAAI,EAAEC,IAAI,IAAG;QACX,IAAI,CAACb,WAAW,GAACa,IAAI;MACvB,CAAC;MAACC,KAAK,EAAEC,CAAC,IAAG,CAAC;KACjB,CAAC;EAGF;EAEAC,SAASA,CAACC,OAAe,EAAEC,MAAc;IACvC,IAAI,CAACvB,SAAS,CAACwB,IAAI,CAACF,OAAO,EAAEC,MAAM,EAAC;MAClCE,kBAAkB,EAAC,KAAK;MACxBC,gBAAgB,EAAC,KAAK;MACtBC,QAAQ,EAAC;KACV,CAAC;EACJ;EAEAC,QAAQA,CAAA,GAAQ;EAAC,QAAAC,CAAA,G;qBAtCNjC,sBAAsB,EAAAkC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAO,EAAA,CAAAC,aAAA,GAAAT,EAAA,CAAAC,iBAAA,CAAAS,EAAA,CAAAC,eAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtB9C,sBAAsB;IAAA+C,SAAA;IAAAC,QAAA,GAAAd,EAAA,CAAAe,kBAAA,CANvB,CACR;MACEC,OAAO,EAAC1D,gBAAgB;MAAC2D,QAAQ,EAAC1D;KACnC,CACF;IAAA2D,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCjCHvB,EAAA,CAAAyB,cAAA,YAAqB;QAAAzB,EAAA,CAAA0B,MAAA,2BAAoB;QAAA1B,EAAA,CAAA2B,YAAA,EAAK;QAC9C3B,EAAA,CAAAyB,cAAA,aAAwB;QAAAzB,EAAA,CAAA0B,MAAA,4EAAqE;QAAA1B,EAAA,CAAA2B,YAAA,EAAM;QACnG3B,EAAA,CAAAyB,cAAA,aAAwB;QACczB,EAAA,CAAA0B,MAAA,YAAK;QAAA1B,EAAA,CAAA2B,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}